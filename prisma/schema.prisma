generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model food {
  food_id     Int        @id @default(autoincrement())
  food_name   String?    @db.VarChar(50)
  image       String?    @db.VarChar(100)
  price       Float?     @db.Float
  description String?    @db.VarChar(1000)
  type_id     Int?
  food_type   food_type? @relation(fields: [type_id], references: [type_id], onDelete: NoAction, onUpdate: NoAction, map: "food_ibfk_1")
  orders      orders[]   @ignore
  sub_food    sub_food[]

  @@index([type_id], map: "type_id")
}

model food_type {
  type_id   Int     @id @default(autoincrement())
  type_name String? @db.VarChar(50)
  food      food[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model like_res {
  user_id    Int?
  res_id     Int?
  date_like  DateTime?   @db.Date
  users      users?      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_1")
  restaurant restaurant? @relation(fields: [res_id], references: [res_id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_2")

  @@index([res_id], map: "res_id")
  @@index([user_id], map: "user_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model orders {
  user_id    Int?
  food_id    Int?
  amount     Int?
  ma_code    String? @db.VarChar(50)
  arr_sub_id String? @db.VarChar(100)
  users      users?  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")
  food       food?   @relation(fields: [food_id], references: [food_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_2")

  @@index([food_id], map: "food_id")
  @@index([user_id], map: "user_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model rate_res {
  user_id    Int?
  res_id     Int?
  amount     Int?
  date_rate  DateTime?   @db.Date
  users      users?      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_1")
  restaurant restaurant? @relation(fields: [res_id], references: [res_id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_2")

  @@index([res_id], map: "res_id")
  @@index([user_id], map: "user_id")
  @@ignore
}

model restaurant {
  res_id      Int        @id @default(autoincrement())
  res_name    String?    @db.VarChar(50)
  image       String?    @db.VarChar(100)
  description String?    @db.VarChar(1000)
  like_res    like_res[] @ignore
  rate_res    rate_res[] @ignore
}

model sub_food {
  sub_id    Int     @id @default(autoincrement())
  sub_name  String? @db.VarChar(100)
  sub_price Float?  @db.Float
  food_id   Int?
  food      food?   @relation(fields: [food_id], references: [food_id], onDelete: NoAction, onUpdate: NoAction, map: "sub_food_ibfk_1")

  @@index([food_id], map: "food_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_not_like_and_rate {
  user_id   Int     @default(0)
  full_name String? @db.VarChar(50)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model user_not_rate {
  user_id   Int     @default(0)
  full_name String? @db.VarChar(50)

  @@ignore
}

model users {
  user_id       Int        @id @default(autoincrement())
  full_name     String?    @db.VarChar(50)
  email         String?    @db.VarChar(100)
  user_password String?    @db.VarChar(50)
  like_res      like_res[] @ignore
  orders        orders[]   @ignore
  rate_res      rate_res[] @ignore
}
